digraph "void_seekers" {

splines  = ortho;
fontname = "Inconsolata";

node [colorscheme = ylgnbu4];
edge [colorscheme = dark28, dir = both];

AbstractScene     [shape = record, pos = "82.795,75.201!"   , label = "{ AbstractScene | + AbstractScene(Pane, int, int) : \l + AbstractScene(Pane, double, double) : \l|# canvas : Canvas\l|+ redraw() : void\l + getCanvas() : Canvas\l }"];
Active            [shape = record, pos = "66.771,92.319!"   , label = "{ Active | + Active(String, String, int) : \l + Active(String, int) : \l|# charge : int\l # maxCharge : int\l|+ getMaxCharge() : int\l + use() : void\l + isAvailable() : boolean\l + getCharge() : int\l + setMaxCharge(int) : void\l + setCharge(int) : void\l }"];
ActiveBar         [shape = record, pos = "94.590,62.938!"   , label = "{ ActiveBar | + ActiveBar(Pane, double, double) : \l|- defaultImage : Image\l - image : Image\l|+ setImage(Image) : void\l + redraw() : void\l + getCanvas() : Canvas\l + getImage() : Image\l }"];
AffectPlayer      [shape = record, pos = "78.670,74.549!"   , label = "{ \<\<interface\>\>\nAffectPlayer | + affectPlayer(PlayableCharacter) : void\l }"];
Attack            [shape = record, pos = "38.679,112.007!"  , label = "{ \<\<interface\>\>\nAttack | + attack(GameCharacter) : void\l }"];
Battery           [shape = record, pos = "95.467,75.521!"   , label = "{ Battery | + Battery() : \l + Battery(int) : \l|- power : int\l|+ draw() : void\l + addAssets(int) : void\l + setPower(int) : void\l + getPower() : int\l }"];
Bomb              [shape = record, pos = "60.401,75.201!"   , label = "{ Bomb | + Bomb() : \l|- value : int\l|+ getValue() : int\l + draw() : void\l + setValue(int) : void\l }"];
BookOfRage        [shape = record, pos = "82.784,62.292!"   , label = "{ BookOfRage | + BookOfRage() : \l|+ draw() : void\l + affectPlayer(PlayableCharacter) : void\l }"];
Bush              [shape = record, pos = "2.056,91.361!"    , label = "{ Bush | + Bush(int) : \l + Bush(Bush) : \l|+ type : int\l|+ draw() : void\l }"];
CharacterHealth   [shape = record, pos = "57.804,142.417!"  , label = "{ CharacterHealth | + CharacterHealth(int, int, int, int) : \l + CharacterHealth(int) : \l + CharacterHealth(int, int) : \l|- redHealth : int\l - maxBlueHealth : int\l - blueHealth : int\l - maxRedHealth : int\l - maxHealth : int\l|+ decreaseBlueHealth(int) : void\l + removeRedHeartContainers(int) : void\l + reduceHealth(int) : void\l + setRedHealth(int) : void\l + getRedHeartContainers() : int\l + setMaxBlueHealth(int) : void\l + decreaseRedHealth(int) : void\l + isDead() : boolean\l + setMaxRedHealth(int) : void\l + getMaxRedHealth() : int\l + getBlueHealth() : int\l + displayHealthBar() : void\l + isExistEmptyBlueHeartContainers() : boolean\l + addRedHeartContainers(int) : void\l + getAbsoluteTotalHealth() : int\l + setMaxHealth(int) : void\l + getMaxBlueHealth() : int\l + fullyHeal() : void\l + addHealth(int, int) : void\l + getRedHealth() : int\l - initializeHealth() : void\l + isExistEmptyRedHeartContainers() : boolean\l + addFullyHealRedHeartContainers(int) : void\l + addFullHealth(int, int) : void\l + setBlueHealth(int) : void\l + getMaxHealth() : int\l }"];
Coin              [shape = record, pos = "92.828,75.361!"   , label = "{ Coin | + Coin(int) : \l|- value : int\l|- addAssets(int) : void\l + getValue() : int\l + setValue(int) : void\l + draw() : void\l }"];
Coordinates       [shape = record, pos = "30.542,139.063!"  , label = "{ Coordinates | + Coordinates(int) : \l + Coordinates() : \l + Coordinates(int, int) : \l + Coordinates(Coordinates) : \l|+ x : int\l + y : int\l|+ minus(Coordinates) : Coordinates\l + add(Coordinates) : Coordinates\l + minus(int, int) : Coordinates\l + clone() : Coordinates\l + toString() : String\l + getDistance(Coordinates) : double\l + add(int, int) : Coordinates\l }"];
Crate             [shape = record, pos = "13.315,74.875!"   , label = "{ Crate | + Crate() : \l + Crate(Crate) : \l|+ draw() : void\l }"];
Draw              [shape = record, pos = "23.580,137.132!"  , label = "{ \<\<interface\>\>\nDraw | + draw() : void\l }"];
Droppable         [shape = record, pos = "60.372,103.972!"  , label = "{ \<\<interface\>\>\nDroppable | + drop() : void\l }"];
EffectItem        [shape = record, pos = "63.811,104.625!"  , label = "{ EffectItem | + EffectItem(String, String) : \l|- description : String\l|+ getDescription() : String\l + toString() : String\l + setDescription(String) : void\l }"];
EndGameScene      [shape = record, pos = "86.909,62.132!"   , label = "{ EndGameScene | + EndGameScene(Pane, int, int) : \l|+ redraw() : void\l }"];
EnemyBobo         [shape = record, pos = "53.858,104.139!"  , label = "{ EnemyBobo | + EnemyBobo() : \l|+ draw() : void\l }"];
EnemyCharacter    [shape = record, pos = "51.191,112.819!"  , label = "{ EnemyCharacter | + EnemyCharacter(String, int, Coordinates) : \l + EnemyCharacter(String, int, int, int) : \l + EnemyCharacter() : \l|- isAttacking : boolean\l|+ isAttacking() : boolean\l + setAttacking(boolean) : void\l }"];
EnemyEvent        [shape = record, pos = "30.268,62.938!"   , label = "{ EnemyEvent | + EnemyEvent() : \l|- ATTACK_FRAME_MILLIS : long\l - WAIT_FRAME_MILLIS : long\l - INTERVAL_MILLIS : long\l - isRunning : boolean\l|+ run() : void\l + kill() : void\l }"];
EnemyGaper        [shape = record, pos = "43.649,104.299!"  , label = "{ EnemyGaper | + EnemyGaper() : \l|+ draw() : void\l + attack(GameCharacter) : void\l }"];
EnemyNecromancer  [shape = record, pos = "47.052,104.299!"  , label = "{ EnemyNecromancer | + EnemyNecromancer() : \l|+ draw() : void\l + attack(GameCharacter) : void\l }"];
EnemyRoom         [shape = record, pos = "34.553,62.132!"   , label = "{ EnemyRoom | + EnemyRoom(int) : \l|+ generateRoom() : void\l }"];
EnemySwamper      [shape = record, pos = "50.455,104.299!"  , label = "{ EnemySwamper | + EnemySwamper() : \l|+ attack(GameCharacter) : void\l + draw() : void\l }"];
EternalBlessing   [shape = record, pos = "109.409,62.292!"  , label = "{ EternalBlessing | + EternalBlessing() : \l|+ affectPlayer(PlayableCharacter) : void\l + draw() : void\l }"];
Explodable        [shape = record, pos = "-3.167,19.347!"   , label = "{ \<\<interface\>\>\nExplodable | + explode() : void\l }"];
Exploding         [shape = record, pos = "32.706,104.139!"  , label = "{ Exploding | + Exploding() : \l|+ draw() : void\l }"];
GameAssets        [shape = record, pos = "121.492,142.417!" , label = "{ GameAssets | + GameAssets() : \l|+ arrowBottomImage : Image\l + wallLeftTemplateURL : URL\l + gaperHurtURL : URL\l + normalProjectileURL : URL\l + gaperURL : URL\l + spike2URL : URL\l + arrowTopImage : Image\l - resourcesPath : String\l + redHeartURL : URL\l + menuBackground : Image\l - bgMedia : Media\l + nickelURL : URL\l + blueHeartURL : URL\l + bush2URL : URL\l + tileImage1 : Image\l + tileImage8 : Image\l + lingeringFeatherURL : URL\l + wallBottomTemplateURL : URL\l + arrowLeftImage : Image\l + dimeURL : URL\l + bombURL : URL\l + fullBlueHealthURL : URL\l + halfBlueHealthURL : URL\l + tileImage2 : Image\l + normalBatteryURL : URL\l + halfRedHealthURL : URL\l + halfBlueHeartURL : URL\l + diedMediaPlayer : MediaPlayer\l + explodeParticleURL : URL\l + fullRedHealthURL : URL\l + whiteProjectileURL : URL\l + transparentURL : URL\l + tileImage4 : Image\l + bush1URL : URL\l + spike1URL : URL\l + tileImage3 : Image\l + endBackground : Image\l + redProjectileURL : URL\l + bookOfRageURL : URL\l + arrowRightImage : Image\l + tileImage5 : Image\l + explodingBombURL : URL\l + crateURL : URL\l + soulURL : URL\l + pennyURL : URL\l + eternalBlessingURL : URL\l + bgMediaPlayer : MediaPlayer\l + emptyRedHealthURL : URL\l + coinIconURL : URL\l + isaacURL : URL\l + loneEyeURL : URL\l + tileImage6 : Image\l - diedMedia : Media\l + largeBatteryURL : URL\l + jaredURL : URL\l + gaperDeadURL : URL\l + wallTopTemplateURL : URL\l + gameFontURL : URL\l + tileImage7 : Image\l + mudURL : URL\l + halfRedHeartURL : URL\l + bombIconURL : URL\l + floorTemplateURL : URL\l + transparentImage : Image\l|+ fromPath(String, double) : Image\l + loadGameFont(double) : Font\l + loadImage(URL, double) : Image\l + loadImage(URL, double, boolean) : Image\l - getURL(String) : URL\l + loadImage(URL, double, double) : Image\l }"];
GameCharacter     [shape = record, pos = "50.760,129.819!"  , label = "{ GameCharacter | + GameCharacter(String, int, int, Coordinates) : \l + GameCharacter(String, int, int, int, int) : \l + GameCharacter(String, int, int, int, int, Coordinates) : \l + GameCharacter(String, int, Coordinates) : \l + GameCharacter(String, int, int, int, int, int, int) : \l + GameCharacter() : \l + GameCharacter(String, int, int, int) : \l|# name : String\l # speed : int\l # assetDefaultImage : Image\l # damage : int\l # assetDeadAnimation : Image\l # height : int\l # isInvincible : boolean\l # coordinate : Coordinates\l # assetImage : Image\l # assetHurtAnimation : Image\l # width : int\l|+ setDamage(int) : void\l + setAssetImage(Image) : void\l + getHeight() : int\l + setRedHealth(int, int) : void\l + setWidth(int) : void\l + getWidth() : int\l + isInvincible() : boolean\l + setBlueHealth(int, int) : void\l + getAssetImage() : Image\l + setAssetHurtAnimation(Image) : void\l + setInvincible(boolean) : void\l + setCoordinate(Coordinates) : void\l + setHeight(int) : void\l + setSpeed(int) : void\l + getDamage() : int\l + drawShadow(GraphicsContext) : void\l + getAssetDefaultImage() : Image\l + setCoordinate(int, int) : void\l + setName(String) : void\l + getAssetDeadAnimation() : Image\l + getCoordinate() : Coordinates\l + setAssetDeadAnimation(Image) : void\l + getAssetHurtAnimation() : Image\l + setAssetDefaultImage(Image) : void\l + getName() : String\l + getSpeed() : int\l }"];
GameEvent         [shape = record, pos = "51.036,63.257!"   , label = "{ GameEvent | + GameEvent() : \l|- INTERVAL_MILLIS : long\l - isRunning : boolean\l - STROBE_HEALTH_MILLIS : long\l|- itemCollisionEvent() : void\l + kill() : void\l + run() : void\l - doorCollisionEvent() : void\l - getDeadEnemies() : ArrayList\<EnemyCharacter\>\l }"];
GameLogic         [shape = record, pos = "48.252,57.167!"   , label = "{ GameLogic | + GameLogic() : \l|- menuScene : MenuScene\l - instance : GameLogic\l + enemyLoop : Thread\l + FLOOR_HEIGHT : int\l - dFlag : BooleanProperty\l + WIN_HEIGHT : int\l - stage : Stage\l - rootPane : Pane\l - dPressed : BooleanProperty\l + FLOOR_TOP_LEFT : Coordinates\l + FLOOR_BOTTOM_LEFT : Coordinates\l + FLOOR_BOTTOM_RIGHT : Coordinates\l + VERT_DOOR_SIZE : Coordinates\l + enemyEvent : EnemyEvent\l - endGameScene : EndGameScene\l - currentRoom : Room\l - activeBar : ActiveBar\l - healthBar : HealthBar\l + EXPLODE_ANIMATION_COUNT : int\l - inventoryBar : InventoryBar\l - trinketBar : TrinketBar\l + pollingLoop : AnimationTimer\l + gameEvent : GameEvent\l + FLOOR_TOP_RIGHT : Coordinates\l - aPressed : BooleanProperty\l + TOP_LEFT : Coordinates\l - state : GameState\l - score : int\l + WALL_SIZE : int\l + CHARACTER_SIZE_DEFAULT : int\l + HORZ_DOOR_SIZE : Coordinates\l + DOOR_THRESHOLD : int\l + gameLoop : Thread\l + BOTTOM_CENTER : Coordinates\l + DOOR_LENGTH : int\l + FLOOR_WIDTH : int\l - aFlag : BooleanProperty\l - spaceFlag : BooleanProperty\l - currentScene : AbstractScene\l + EXPLODE_DURATION : int\l - character : PlayableCharacter\l + TOP_RIGHT : Coordinates\l - USE_HIGH_RES : boolean\l + WIN_WIDTH : int\l + BOTTOM_RIGHT : Coordinates\l - gameScene : GameScene\l + LEFT_DOOR : Coordinates\l - escPressed : BooleanProperty\l + TILE_SIZE : int\l + MIDDLE_LEFT : Coordinates\l - eFlag : BooleanProperty\l + RIGHT_DOOR : Coordinates\l + MIDDLE_RIGHT : Coordinates\l + BOTTOM_DOOR : Coordinates\l + BOTTOM_LEFT : Coordinates\l - sPressed : BooleanProperty\l + TOP_CENTER : Coordinates\l + MIDDLE_CENTER : Coordinates\l + usedItem : Set\<EffectItem\>\l - ePressed : BooleanProperty\l - spacePressed : BooleanProperty\l - wPressed : BooleanProperty\l + TOP_DOOR : Coordinates\l|+ exit() : void\l + getCharacter() : PlayableCharacter\l + getActiveBar() : ActiveBar\l + setTrinketBar(TrinketBar) : void\l + getScore() : int\l + pollInputsInMenu() : void\l + endGame() : void\l + pollInputsInEnd() : void\l + attack(Attack, GameCharacter) : void\l + setCurrentRoom(Room) : void\l + removeDeadEnemies(ArrayList\<EnemyCharacter\>) : void\l + getCurrentScene() : AbstractScene\l + pollProjectiles() : void\l + getCanvas() : Canvas\l + switchScene(AbstractScene) : void\l + getInventoryBar() : InventoryBar\l + getStage() : Stage\l + setState(GameState) : void\l + enemiesTargetPlayer() : void\l + getEndGameScene() : EndGameScene\l + getGraphicsContext() : GraphicsContext\l + setCurrentScene(AbstractScene) : void\l + getState() : GameState\l + getInstance() : GameLogic\l + setEndGameScene(EndGameScene) : void\l + keyPressedHandler(KeyEvent) : void\l + setInventoryBar(InventoryBar) : void\l + setCharacter(PlayableCharacter) : void\l + setActiveBar(ActiveBar) : void\l + setScore(int) : void\l + pollObstacles() : void\l + setStage(Stage) : void\l + setGameScene(GameScene) : void\l + keyHandler(KeyEvent, boolean) : void\l + getTrinketBar() : TrinketBar\l + getHealthBar() : HealthBar\l + setHealthBar(HealthBar) : void\l + addScore(int) : void\l + getMenuScene() : MenuScene\l + pollInputsInGame() : void\l + setRootPane(Pane) : void\l + keyReleasedHandler(KeyEvent) : void\l + setMenuScene(MenuScene) : void\l + explode(Exploding) : void\l + shootProjectile(Projectile, boolean[]) : void\l + getCurrentRoom() : Room\l + useBomb() : void\l + getGameScene() : GameScene\l + init(PlayableCharacter) : void\l + getRootPane() : Pane\l + transitionToNextRoom(RoomDirection) : void\l }"];
GameScene         [shape = record, pos = "117.367,62.451!"  , label = "{ GameScene | + GameScene(Pane, int, int) : \l|+ redraw() : void\l - drawText(GraphicsContext) : void\l + getCanvas() : Canvas\l }"];
GameState         [shape = record, pos = "74.291,62.778!"   , label = "{ \<\<enumeration\>\>\nGameState | + GameState() : \l|+ END : \l + ONGOING : \l + MENU : \l|+ values() : GameState[]\l + valueOf(String) : GameState\l }"];
GameUtils         [shape = record, pos = "3.750,65.014!"    , label = "{ GameUtils | + GameUtils() : \l|- itemList : ArrayList\<Class\<Item\>\>\l - FLOOR_TILES : Image[]\l|+ isWithinRange(Coordinates, Coordinates, int) : boolean\l + isCollided(GameCharacter, GameCharacter) : boolean\l + inBound(Coordinates, int, int) : boolean\l + outOfBound(Coordinates, int, int) : boolean\l + isWithinRange(Item, GameCharacter, int) : boolean\l - newObstacles() : Obstacle[]\l + hasBeenUsed(EffectItem) : boolean\l + randomizeNextRoom() : Room?\l + obstacleRandomizer(int) : ArrayList\<Pair\<Coordinates, Obstacle\>\>\l + getRandomEffectItem() : EffectItem\l + isCollided(GameCharacter, Coordinates, Coordinates) : boolean\l + coordinatesRandomizer() : Coordinates\l + isCollided(GameCharacter, Item) : boolean\l + addToUsed(EffectItem) : void\l + resetUsedItem() : void\l + isWithinRange(GameCharacter, GameCharacter, int) : boolean\l + tilesRandomizer(int, int) : Image[][]\l }"];
HealthBar         [shape = record, pos = "101.562,64.056!"  , label = "{ HealthBar | + HealthBar(Pane, double, double) : \l|- assetFullRedHealth : Image\l - assetHalfRedHealth : Image\l - assetHalfBlueHealth : Image\l - assetEmptyHealth : Image\l - healthColor : Color\l - assetFullBlueHealth : Image\l - strobeHealth : boolean\l|+ setHealthColor(Color) : void\l + isStrobeHealth() : boolean\l + redraw() : void\l - playerHealth() : int\l + getHealthColor() : Color\l + setStrobeHealth(boolean) : void\l }"];
Heart             [shape = record, pos = "106.787,75.681!"  , label = "{ Heart | + Heart(String, int, int) : \l|- value : int\l - type : int\l|+ setType(int) : void\l + draw() : void\l + getValue() : int\l + getType() : int\l + setValue(int) : void\l }"];
InventoryBar      [shape = record, pos = "105.367,62.618!"  , label = "{ InventoryBar | + InventoryBar(Pane, double, double) : \l|- assetCoin : Image\l - assetBomb : Image\l|+ getCanvas() : Canvas\l + redraw() : void\l }"];
Item              [shape = record, pos = "61.679,114.417!"  , label = "{ Item | + Item(String) : \l|# size : int\l # name : String\l # canNowPicked : boolean\l # coordinate : Coordinates\l # assetImage : Image\l|+ getName() : String\l + setName(String) : void\l + getAssetImage() : Image\l + setSize(int) : void\l + isCanNowPicked() : boolean\l + setCoordinate(Coordinates) : void\l + getSize() : int\l + setAssetImage(Image) : void\l + setCanNowPicked(boolean) : void\l + getCoordinate() : Coordinates\l }"];
LingeringFeather  [shape = record, pos = "77.583,62.292!"   , label = "{ LingeringFeather | + LingeringFeather() : \l|+ affectPlayer(PlayableCharacter) : void\l + draw() : void\l }"];
LonelyEye         [shape = record, pos = "90.465,62.292!"   , label = "{ LonelyEye | + LonelyEye() : \l|+ affectPlayer(PlayableCharacter) : void\l + draw() : void\l }"];
Main              [shape = record, pos = "118.020,39.438!"  , label = "{ Main | + Main() : \l|- GAME_TITLE : String\l|+ main(String[]) : void\l + start(Stage) : void\l }"];
MenuScene         [shape = record, pos = "98.353,62.778!"   , label = "{ MenuScene | + MenuScene(Pane, int, int) : \l|- selections : String[]\l - currentSelection : int\l|+ getSelection() : String\l + moveSelection(int) : void\l + redraw() : void\l }"];
Mud               [shape = record, pos = "7.101,91.194!"    , label = "{ Mud | + Mud() : \l + Mud(Mud) : \l|+ draw() : void\l }"];
NormalProjectile  [shape = record, pos = "22.740,62.292!"   , label = "{ NormalProjectile | + NormalProjectile(Coordinates) : \l|+ draw() : void\l + affectPlayer(PlayableCharacter) : void\l }"];
NormalRoom        [shape = record, pos = "35.020,74.708!"   , label = "{ NormalRoom | + NormalRoom(int) : \l + NormalRoom(int, URL, URL, URL, URL) : \l }"];
Obstacle          [shape = record, pos = "5.490,106.382!"   , label = "{ Obstacle | + Obstacle(int) : \l|# height : int\l # image : Image\l # size : int\l # coordinates : Coordinates\l # name : String\l|+ setSize(int) : void\l + getImage() : Image\l + getCoordinates() : Coordinates\l + getName() : String\l + getHeight() : int\l + setHeight(int) : void\l + setImage(Image) : void\l + setName(String) : void\l + getSize() : int\l + setCoordinates(Coordinates) : void\l }"];
Passive           [shape = record, pos = "81.823,91.028!"   , label = "{ Passive | + Passive(String, String) : \l + Passive(String) : \l }"];
Pickable          [shape = record, pos = "87.084,122.938!"  , label = "{ \<\<interface\>\>\nPickable | + picked : boolean\l }"];
PlayableCharacter [shape = record, pos = "44.122,81.750!"   , label = "{ PlayableCharacter | + PlayableCharacter(String, int, int, int, int, int, int) : \l + PlayableCharacter() : \l + PlayableCharacter(String, int, Coordinates, int, int, int, int) : \l + PlayableCharacter(String, int, int, int, int) : \l|- coins : int\l - passives : ArrayList\<Passive\>\l - bombs : int\l - trinket : Trinket\l - pickedUpEffectItem : ArrayList\<EffectItem\>\l - active : Active\l - fireRate : int\l - luck : int\l|+ getBombs() : int\l + setFireRate(int) : void\l + getNumberOfPassiveItem() : int\l + attack(GameCharacter) : void\l + getPickedUpEffectItem() : ArrayList\<EffectItem\>\l + getStats() : ArrayList\<PlayerEffects\>\l + getCoins() : int\l + setLuck(int) : void\l + getPassiveItem() : ArrayList\<Passive\>\l + addPassive(Passive) : void\l + addEffectItem(EffectItem) : Item\l + swapActiveItem(Active) : Active\l + setCharacterStats(int, int, int, int, int) : void\l + getActive() : Active\l + setActive(Active) : void\l + getTrinket() : Trinket\l + isAlreadyPicked(EffectItem) : boolean\l + setCoins(int) : void\l + setCharacterStats() : void\l + getFireRate() : int\l + setTrinket(Trinket) : void\l + getNumberOfPickedEffectItem() : int\l + swapTrinket(Trinket) : Trinket\l + setBombs(int) : void\l + getLuck() : int\l - isActiveSlotEmpty() : boolean\l + dropActiveItem() : Active\l + hasBomb() : boolean\l + add(Item) : Item\l - isTrinketSlotEmpty() : boolean\l + hasCoin() : boolean\l + dropTrinket() : Trinket\l + setCharacterStats(int, int, int, int) : void\l + addEffectToPickedItem(EffectItem) : void\l }"];
PlayerEffects     [shape = record, pos = "130.145,142.417!" , label = "{ PlayerEffects | + PlayerEffects() : \l|# duration : int\l }"];
PlayerIsaac       [shape = record, pos = "13.030,62.292!"   , label = "{ PlayerIsaac | + PlayerIsaac() : \l|+ draw() : void\l + attack(GameCharacter) : void\l }"];
PlayerJared       [shape = record, pos = "0.195,62.618!"    , label = "{ PlayerJared | + PlayerJared() : \l|- hp : int\l - beginHealth : int\l|+ draw() : void\l + attack(GameCharacter) : void\l }"];
PlayerSoul        [shape = record, pos = "19.338,62.292!"   , label = "{ PlayerSoul | + PlayerSoul() : \l|+ draw() : void\l + attack(GameCharacter) : void\l }"];
PlayerSuperIsaac  [shape = record, pos = "26.865,62.292!"   , label = "{ PlayerSuperIsaac | + PlayerSuperIsaac() : \l|+ draw() : void\l + attack(GameCharacter) : void\l }"];
PlayerTest        [shape = record, pos = "38.610,62.292!"   , label = "{ PlayerTest | + PlayerTest() : \l|+ attack(GameCharacter) : void\l + draw() : void\l }"];
PocketItem        [shape = record, pos = "94.155,90.868!"   , label = "{ PocketItem | + PocketItem(String) : \l }"];
Projectile        [shape = record, pos = "56.149,107.819!"  , label = "{ Projectile | + Projectile(int, Coordinates) : \l + Projectile(String, Coordinates) : \l + Projectile(String, int, Coordinates) : \l + Projectile(String, int, int, Coordinates) : \l|# size : int\l # directions : boolean[]\l # speed : int\l # coordinate : Coordinates\l # image : Image\l # name : String\l # damage : int\l|+ getSize() : int\l + getSpeed() : int\l + getImage() : Image\l + setImage(Image) : void\l + setSpeed(int) : void\l + setDamage(int) : void\l + setSize(int) : void\l + getDamage() : int\l + setName(String) : void\l + getName() : String\l + setDirections(boolean[]) : void\l + getCoordinate() : Coordinates\l + setCoordinate(Coordinates) : void\l + getDirections() : boolean[]\l }"];
RandomIntRange    [shape = record, pos = "-2.299,75.521!"   , label = "{ RandomIntRange | + RandomIntRange(int, int) : \l|+ result : int\l + rMin : int\l + rMax : int\l|+ next() : int\l + getResult() : int\l + createNewResult(int, int) : void\l }"];
RedProjectile     [shape = record, pos = "64.991,62.292!"   , label = "{ RedProjectile | + RedProjectile(Coordinates) : \l|+ affectPlayer(PlayableCharacter) : void\l + draw() : void\l }"];
Room              [shape = record, pos = "50.869,98.069!"   , label = "{ Room | + Room(int) : \l + Room(int, URL, URL, URL, URL) : \l|# items : ArrayList\<Item\>\l # bottomRoom : Room\l # bottomImage : Image\l # projectiles : ArrayList\<Projectile\>\l # rightWallURL : URL\l # obstacles : ArrayList\<Obstacle\>\l # topRoom : Room\l # rightImage : Image\l # enemyCharacters : ArrayList\<EnemyCharacter\>\l # leftRoom : Room\l # bottomWallURL : URL\l # leftWallURL : URL\l # floorTiles : Image[][]\l # leftImage : Image\l # topWallURL : URL\l # rightRoom : Room\l # difficulty : int\l # topImage : Image\l|# generateEnemies() : void\l + getRightRoom() : Room\l + setEnemyCharacters(ArrayList\<EnemyCharacter\>) : void\l + getItems() : ArrayList\<Item\>\l + getBottomRoom() : Room\l + getObstacles() : ArrayList\<Obstacle\>\l + draw() : void\l + setLeftImage(Image) : void\l + getEnemyCharacters() : ArrayList\<EnemyCharacter\>\l + getTopRoom() : Room\l + generateRoom() : void\l + setRightRoom(Room) : void\l + setTopRoom(Room) : void\l + setBottomRoom(Room) : void\l + setItems(ArrayList\<Item\>) : void\l + getLeftRoom() : Room\l + setProjectiles(ArrayList\<Projectile\>) : void\l + getProjectiles() : ArrayList\<Projectile\>\l + getDifficulty() : int\l + setBottomImage(Image) : void\l + setObstacles(ArrayList\<Obstacle\>) : void\l + setRightImage(Image) : void\l + setTopImage(Image) : void\l + setLeftRoom(Room) : void\l + setDifficulty(int) : void\l # generateObstacles() : void\l }"];
RoomDirection     [shape = record, pos = "126.215,142.417!" , label = "{ \<\<enumeration\>\>\nRoomDirection | + RoomDirection() : \l|+ TOP : \l + BOTTOM : \l + LEFT : \l + RIGHT : \l|+ values() : RoomDirection[]\l + valueOf(String) : RoomDirection\l }"];
Slowable          [shape = record, pos = "-0.611,19.347!"   , label = "{ \<\<interface\>\>\nSlowable | + slow() : void\l }"];
SpawnRoom         [shape = record, pos = "56.064,62.132!"   , label = "{ SpawnRoom | + SpawnRoom(int) : \l|+ generateRoom() : void\l }"];
Spike             [shape = record, pos = "9.059,91.361!"    , label = "{ Spike | + Spike(int) : \l + Spike(Spike) : \l|+ type : int\l|+ draw() : void\l }"];
TreasureRoom      [shape = record, pos = "16.433,62.132!"   , label = "{ TreasureRoom | + TreasureRoom(int) : \l|+ generateRoom() : void\l }"];
Trinket           [shape = record, pos = "60.450,91.035!"   , label = "{ Trinket | + Trinket(String, String) : \l|+ drop() : void\l }"];
TrinketBar        [shape = record, pos = "113.534,62.778!"  , label = "{ TrinketBar | + TrinketBar(Pane, double, double) : \l|- defaultImage : Image\l - image : Image\l|+ redraw() : void\l + getImage() : Image\l + setImage(Image) : void\l }"];
Usable            [shape = record, pos = "67.075,103.972!"  , label = "{ \<\<interface\>\>\nUsable | + use() : void\l }"];
Water             [shape = record, pos = "4.934,91.194!"    , label = "{ Water | + Water(Water) : \l + Water() : \l|+ draw() : void\l }"];
whiteProjectile   [shape = record, pos = "60.866,62.292!"   , label = "{ whiteProjectile | + whiteProjectile(Coordinates) : \l|+ affectPlayer(PlayableCharacter) : void\l + draw() : void\l }"];

Active            -> EffectItem        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Active            -> Usable            [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
ActiveBar         -> AbstractScene     [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Battery           -> PocketItem        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Bomb              -> PocketItem        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
BookOfRage        -> Active            [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
BookOfRage        -> AffectPlayer      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Bush              -> Draw              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Bush              -> Obstacle          [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Coin              -> PocketItem        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Crate             -> Obstacle          [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EffectItem        -> Item              [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EndGameScene      -> AbstractScene     [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EnemyBobo         -> EnemyCharacter    [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EnemyCharacter    -> GameCharacter     [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EnemyGaper        -> Attack            [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EnemyGaper        -> EnemyCharacter    [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EnemyNecromancer  -> Attack            [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EnemyNecromancer  -> EnemyCharacter    [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EnemyRoom         -> Bomb              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
EnemyRoom         -> NormalRoom        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EnemySwamper      -> Attack            [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EnemySwamper      -> EnemyCharacter    [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EternalBlessing   -> AffectPlayer      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
EternalBlessing   -> Passive           [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Exploding         -> Item              [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
GameCharacter     -> CharacterHealth   [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
GameCharacter     -> Coordinates       [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "coordinate\n1"];
GameCharacter     -> Coordinates       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameCharacter     -> Draw              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
GameLogic         -> AbstractScene     [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "currentScene\n1"];
GameLogic         -> ActiveBar         [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "activeBar\n1"];
GameLogic         -> Coordinates       [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "TOP_LEFT\n1"];
GameLogic         -> Coordinates       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameLogic         -> EffectItem        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "usedItem\n*"];
GameLogic         -> EndGameScene      [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "endGameScene\n1"];
GameLogic         -> EnemyEvent        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameLogic         -> EnemyEvent        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "enemyEvent\n1"];
GameLogic         -> EnemyRoom         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameLogic         -> Exploding         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameLogic         -> GameEvent         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameLogic         -> GameEvent         [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "gameEvent\n1"];
GameLogic         -> GameScene         [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "gameScene\n1"];
GameLogic         -> GameState         [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "state\n1"];
GameLogic         -> HealthBar         [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "healthBar\n1"];
GameLogic         -> InventoryBar      [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "inventoryBar\n1"];
GameLogic         -> MenuScene         [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "menuScene\n1"];
GameLogic         -> NormalProjectile  [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameLogic         -> PlayableCharacter [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "character\n1"];
GameLogic         -> PlayerIsaac       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameLogic         -> PlayerJared       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameLogic         -> PlayerSoul        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameLogic         -> RandomIntRange    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameLogic         -> Room              [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "currentRoom\n1"];
GameLogic         -> SpawnRoom         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameLogic         -> TrinketBar        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "trinketBar\n1"];
GameScene         -> AbstractScene     [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
GameUtils         -> Bush              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameUtils         -> Coordinates       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameUtils         -> Crate             [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameUtils         -> Mud               [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameUtils         -> Obstacle          [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameUtils         -> RandomIntRange    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameUtils         -> Spike             [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
GameUtils         -> Water             [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
HealthBar         -> AbstractScene     [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Heart             -> PocketItem        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
InventoryBar      -> AbstractScene     [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Item              -> Coordinates       [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "coordinate\n1"];
Item              -> Draw              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Item              -> Pickable          [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
LingeringFeather  -> AffectPlayer      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
LingeringFeather  -> Trinket           [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
LonelyEye         -> AffectPlayer      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
LonelyEye         -> EffectItem        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Main              -> ActiveBar         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main              -> EndGameScene      [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main              -> GameScene         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main              -> HealthBar         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main              -> InventoryBar      [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main              -> MenuScene         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Main              -> TrinketBar        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
MenuScene         -> AbstractScene     [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Mud               -> Obstacle          [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
NormalProjectile  -> AffectPlayer      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
NormalProjectile  -> Projectile        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
NormalRoom        -> Room              [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Obstacle          -> Coordinates       [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "coordinates\n1"];
Obstacle          -> Draw              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Passive           -> EffectItem        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Passive           -> Pickable          [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayableCharacter -> Active            [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "active\n1"];
PlayableCharacter -> Attack            [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayableCharacter -> EffectItem        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "pickedUpEffectItem\n*"];
PlayableCharacter -> GameCharacter     [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayableCharacter -> Passive           [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "passives\n*"];
PlayableCharacter -> Trinket           [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "trinket\n1"];
PlayerIsaac       -> Attack            [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayerIsaac       -> PlayableCharacter [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayerJared       -> Attack            [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayerJared       -> PlayableCharacter [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayerJared       -> RandomIntRange    [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
PlayerSoul        -> Attack            [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayerSoul        -> PlayableCharacter [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayerSuperIsaac  -> Attack            [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayerSuperIsaac  -> PlayableCharacter [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayerTest        -> Attack            [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PlayerTest        -> PlayableCharacter [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PocketItem        -> Item              [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
PocketItem        -> Pickable          [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Projectile        -> Coordinates       [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "coordinate\n1"];
Projectile        -> Draw              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RedProjectile     -> AffectPlayer      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
RedProjectile     -> Projectile        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Room              -> Draw              [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Room              -> EnemyBobo         [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Room              -> EnemyCharacter    [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "enemyCharacters\n*"];
Room              -> EnemyGaper        [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Room              -> EnemyNecromancer  [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Room              -> EnemySwamper      [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
Room              -> Item              [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "items\n*"];
Room              -> Obstacle          [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "obstacles\n*"];
Room              -> Projectile        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "projectiles\n*"];
SpawnRoom         -> Bomb              [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
SpawnRoom         -> NormalRoom        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Spike             -> Obstacle          [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
TreasureRoom      -> Coordinates       [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
TreasureRoom      -> Crate             [color = "#595959", style = dashed, arrowtail = none    , arrowhead = vee     , taillabel = "", label = "«create»", headlabel = ""];
TreasureRoom      -> NormalRoom        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Trinket           -> Droppable         [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Trinket           -> EffectItem        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
TrinketBar        -> AbstractScene     [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
Water             -> Obstacle          [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
whiteProjectile   -> AffectPlayer      [color = "#008200", style = dashed, arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];
whiteProjectile   -> Projectile        [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];

}
